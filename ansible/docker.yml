- hosts: localhost
  tasks:
    
  - name: Create Network
    docker_network:
      name: "{{ network_name }}"

  - name: Create Deluge Container
    docker_container:
      name: deluge
      image: nelsonyaccuzzi/docker-rpi-deluge
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.deluge.config_path }}:/config"
        - "{{ services.deluge.data_path }}:/data"
      ports:
        - "8112:8112"
      restart_policy: unless-stopped
      pull: yes
    when: services.deluge.enable

  - name: Create Sonarr Container
    docker_container:
      name: sonarr
      image: nelsonyaccuzzi/docker-rpi-sonarr
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.sonarr.config_path }}:/config"
        - "{{ services.sonarr.data_path }}:/data"
      ports:
        - "8989:8989"
      restart_policy: unless-stopped
      pull: yes
    when: services.sonarr.enable

  - name: Create Radarr Container
    docker_container:
      name: radarr
      image: nelsonyaccuzzi/docker-rpi-radarr
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.radarr.config_path }}:/config"
        - "{{ services.radarr.data_path }}:/data"
      ports:
        - "7878:7878"
      restart_policy: unless-stopped
      pull: yes
    when: services.radarr.enable

  - name: Create Bazarr Container
    docker_container:
      name: bazarr
      image: nelsonyaccuzzi/docker-rpi-bazarr
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.bazarr.config_path }}:/config"
        - "{{ services.bazarr.data_path }}:/data"
      ports:
        - "6767:6767"
      restart_policy: unless-stopped
      pull: yes
    when: services.bazarr.enable

  - name: Create CouchPotato Container
    docker_container:
      name: couchpotato
      image: nelsonyaccuzzi/docker-rpi-couchpotato
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.couchpotato.config_path }}:/config"
        - "{{ services.couchpotato.data_path }}:/data"
      ports:
        - "5050:5050"
      restart_policy: unless-stopped
      pull: yes
    when: services.couchpotato.enable 

  - name: Create Jackett Container
    docker_container:
      name: jackett
      image: nelsonyaccuzzi/docker-rpi-jackett
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.jackett.config_path }}:/config"
        - "{{ services.jackett.data_path }}:/data"
      ports:
        - "9117:9117"
      restart_policy: unless-stopped
      pull: yes
    when: services.jackett.enable

  - name: Create Plex Container
    docker_container:
      name: plex
      image: nelsonyaccuzzi/docker-rpi-plex
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.plex.config_path }}:/config"
        - "{{ services.plex.data_path }}:/data"
      ports:
        - "32400:32400"
      env:
        ADVERTISE_IP: "http://192.168.0.33:32400/"
      restart_policy: unless-stopped
      pull: yes
    when: services.plex.enable
      
  - name: Create Organizr Container
    docker_container:
      name: organizr
      image: organizrtools/organizr-v2:armhf
      state: started
      networks:
      - name: "{{ network_name }}"
      volumes:
        - "{{ services.organizr.config_path }}:/config"
      ports:
        - "80:80"
      restart_policy: unless-stopped
      pull: yes
    when: services.organizr.enable
